create or replace PACKAGE BODY spcpl_notasentrada_pl_op
IS
   c_version CONSTANT   NUMBER := 23.1912;
   c_modulo  CONSTANT   NUMBER := 0;

   --------------------------------------------------------------------------
   --  Development TI
   --------------------------------------------------------------------------
   -- Modificaciones
   --------------------------------------------------------------------------
   -- Cuándo   Quién    Qué
   --------------------------------------------------------------------------
   -- 23.1912 DEVTI   Elaboración del paquete.
   -- 
   --------------------------------------------------------------------------

   ----
   -- Variables Globales 
   ----
   -- Variables para manejo de errores. 
   ----
   -- Excepciones globales
   ----
   ----
   -- Procedimientos y funciones privados
   ----
   ----
   --  Función que le envía al frente la versión actual del paquete.
   ----
   FUNCTION version
   RETURN NUMBER
   IS
   BEGIN
   RETURN c_version;
   END VERSION;


   ----
   -- Procedimientos y funciones públicos
   ----
	PROCEDURE agregar_notaentrada(p_NEC_USR in VARCHAR2
								 ,p_NEN_BORRADO in NUMBER
								 ,p_ENEN_ID in NUMBER
								 ,p_OCN_ID in NUMBER
								 ,p_NEN_ID OUT NUMBER
								 ,p_NEF_FECHA in DATE
								 ,p_NEN_ENTIDAD in NUMBER
								 ,p_NEN_NUMERO in NUMBER)
	IS
	BEGIN   

		select  nvl(max(NEN_ID),0) + 1  into p_NEN_ID from CPL_NOTAS_ENT_PL;

		insert into CPL_NOTAS_ENT_PL(NEC_USR
                                    ,NEN_BORRADO
                                    ,ENEN_ID
                                    ,OCN_ID
                                    ,NEN_ID
                                    ,NEF_FECHA
                                    ,NEN_ENTIDAD
                                    ,NEN_NUMERO) 
                            values (p_NEC_USR
                                    ,p_NEN_BORRADO
                                    ,p_ENEN_ID
                                    ,p_OCN_ID
                                    ,p_NEN_ID
                                    ,p_NEF_FECHA
                                    ,p_NEN_ENTIDAD
                                    ,p_NEN_NUMERO);


	END agregar_notaentrada;

	PROCEDURE agregar_notaentrada_det(p_ENEN_ID in NUMBER
									 ,p_NEDN_ENTIDAD in NUMBER
                                     ,p_NEDN_CTA_CON_CARGO in NUMBER
									 ,p_NEDN_COSTOPLACA in NUMBER
									 ,p_NEDN_COSTOTOTAL in NUMBER
									 ,p_NEDN_BORRADO in NUMBER
									 ,p_NEDN_CANT_PL_IDENT in NUMBER
									 ,p_NEN_ID in NUMBER
									 ,p_NEDN_CANTIDADPLACAS in NUMBER
									 ,p_NEDN_CANT_PL_X_IDENT in NUMBER
									 ,p_TPN_ID in NUMBER
									 ,p_NEDN_ID out NUMBER
									 ,p_NEDN_NUM_RENGLON in NUMBER)
	IS
	BEGIN   

		select  nvl(max(NEDN_ID),0) + 1  into p_NEDN_ID from CPL_NOTAS_ENT_PL_DET;

		insert into CPL_NOTAS_ENT_PL_DET(ENEN_ID
										,NEDN_ENTIDAD
                                        ,NEDN_CTA_CON_CARGO
										,NEDN_COSTOPLACA
										,NEDN_COSTOTOTAL
										,NEDN_BORRADO
										,NEDN_CANT_PL_IDENT
										,NEN_ID
										,NEDN_CANTIDADPLACAS
										,NEDN_CANT_PL_X_IDENT
										,TPN_ID
										,NEDN_ID
										,NEDN_NUM_RENGLON) 
								values (p_ENEN_ID
										,p_NEDN_ENTIDAD
                                        ,p_NEDN_CTA_CON_CARGO
										,p_NEDN_COSTOPLACA
										,p_NEDN_COSTOTOTAL
										,p_NEDN_BORRADO
										,p_NEDN_CANT_PL_IDENT
										,p_NEN_ID
										,p_NEDN_CANTIDADPLACAS
										,p_NEDN_CANT_PL_X_IDENT
										,p_TPN_ID
										,p_NEDN_ID
										,p_NEDN_NUM_RENGLON);

	END agregar_notaentrada_det;	 	

	PROCEDURE inactiva_notaentrada(p_NEN_ID in number)
	IS
	BEGIN
		update CPL_NOTAS_ENT_PL set NEN_BORRADO = 1 WHERE NEN_ID = p_NEN_ID;
	END inactiva_notaentrada;


END spcpl_notasentrada_pl_op;