@model ICVNL_SistemaLogistica.Web.ViewModels.Detalle_ProveedoresVM

@{
    ViewBag.Title = "Administración de Proveedores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content-wrapper">
    <div class="page-content">
        <div class="row">
            <div class="col-md-10">
                <h1 class="page-title">
                    Administración de Proveedores
                    <small>Sistema de Logística de Control de Placas&nbsp;</small>
                </h1>
            </div>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="row widget-row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="portlet box blue-hoki">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-edit"></i>Detalle
                            </div>
                            <div class="actions">
                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                            </div>
                        </div>
                        <div class="portlet-body form form-horizontal">
                            <div class="form-actions ">
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        @if (HttpContext.Current.Session["UserSC"] != null &&
                                        ((ICVNL_SistemaLogistica.Web.Entities.Usuarios)HttpContext.Current.Session["UserSC"]).UsuariosPermisos.Pantallas_Estados.Actualizar)
                                        {
                                            <button type="submit" onclick="return ValidaCamposDetails();" class="btn dark margin-right-10">
                                                Guardar
                                                <i class="fa fa-save"></i>
                                            </button>
                                        }
                                        
                                        <button type="button" class="btn default grey" onclick="location.href='@Url.Action("Index", "Proveedores")';">
                                            Regresar
                                            <i class="fa fa-chevron-circle-left"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-body">
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-6" id="divId">
                                            <label class="control-label">Id</label>
                                            <div class="input-group">
                                                <p class="form-control-static">
                                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @disabled = "disabled" } })
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.NumeroProveedor, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.NumeroProveedor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = "txtNumeroProveedor", @onchange = "ValidaProveedorDetails();" } })
                                            @Html.ValidationMessageFor(model => model.NumeroProveedor, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.NombreProveedor, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.NombreProveedor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = "txtNombreProveedor", @disabled = "disabled" } })
                                            @Html.ValidationMessageFor(model => model.NombreProveedor, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.EmailProveedor, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.EmailProveedor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.EmailProveedor, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row"><br /></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/Proveedores/Proveedores.js"></script>
}
