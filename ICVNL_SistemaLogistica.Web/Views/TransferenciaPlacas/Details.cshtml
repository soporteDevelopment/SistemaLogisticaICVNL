@model ICVNL_SistemaLogistica.Web.ViewModels.Detalle_TransferenciaPlacasVM

@{
    ViewBag.Title = "Administrador de Transferencia de Placas entre Delegaciones/Bancos ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/css/estilosAlerta.css" rel="stylesheet" />
@using (Html.BeginForm("Details", "TransferenciaPlacas", FormMethod.Post, new { id = "myForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="page-content-wrapper">
        <div class="page-content">
            <div class="row">
                <div class="col-md-10">
                    <h1 class="page-title">
                        Administrador de Transferencia de Placas entre Delegaciones/Bancos
                        <small>Sistema de Logística de Control de Placas&nbsp;</small>
                    </h1>
                </div>
            </div>
            <div class="row widget-row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="portlet box blue-hoki">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-edit"></i>Encabezado
                            </div>
                            <div class="actions">
                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                            </div>
                        </div>
                        <div class="portlet-body form form-horizontal">
                            <div class="form-actions ">
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        @if (Model.IdEstatusTransferencia == 1)
                                        {
                                            if (HttpContext.Current.Session["UserSC"] != null &&
                                            ((ICVNL_SistemaLogistica.Web.Entities.Usuarios)HttpContext.Current.Session["UserSC"]).UsuariosPermisos.Pantallas_TransferenciasPlacasEntreDelegacionesBancos.Actualizar)
                                            {
                                                <button type="button" id="btnGuardar" onclick="ModifyTransferencia();" class="btn dark margin-right-10">
                                                    Guardar
                                                    <i class="fa fa-save"></i>
                                                </button>
                                            }

                                            if (HttpContext.Current.Session["UserSC"] != null &&
                                            ((ICVNL_SistemaLogistica.Web.Entities.Usuarios)HttpContext.Current.Session["UserSC"]).UsuariosPermisos.Pantallas_TransferenciasPlacasEntreDelegacionesBancos.Cancelar)
                                            {
                                                <button type="button" id="btnCancelarTransferencia" onclick="CancelaTransferencia();" class="btn red margin-right-10">
                                                    Cancelar Transferencia
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            }

                                            if (HttpContext.Current.Session["UserSC"] != null &&
                                            ((ICVNL_SistemaLogistica.Web.Entities.Usuarios)HttpContext.Current.Session["UserSC"]).UsuariosPermisos.Pantallas_TransferenciasPlacasEntreDelegacionesBancos.GenerarPackList)
                                            {
                                                <button type="button" id="btnGeneraPackingList" onclick="GeneraPackingList();" class="btn blue margin-right-10">
                                                    Generar Packing List
                                                    <i class="fa fa-list"></i>
                                                </button>
                                            }

                                            if (HttpContext.Current.Session["UserSC"] != null &&
                                                ((ICVNL_SistemaLogistica.Web.Entities.Usuarios)HttpContext.Current.Session["UserSC"]).UsuariosPermisos.Pantallas_TransferenciasPlacasEntreDelegacionesBancos.TransferirPlacasAcceso)
                                            {
                                                <button type="button" id="btnTransferenciaPlacas" onclick="EnviarTransferenciaPlacas();" class="btn green margin-right-10">
                                                    Transferir Placas
                                                    <i class="fa fa-list"></i>
                                                </button>
                                            }

                                        }
                                        @if (HttpContext.Current.Session["UserSC"] != null &&
                                        ((ICVNL_SistemaLogistica.Web.Entities.Usuarios)HttpContext.Current.Session["UserSC"]).UsuariosPermisos.Pantallas_TransferenciasPlacasEntreDelegacionesBancos.TransferirPlacasGeneraPDF)
                                        {
                                            <button type="button" class="btn green margin-right-10" onclick="GeneraPDF();">
                                                Generar  PDF
                                                <i class="fa fa-file-pdf-o"></i>
                                            </button>
                                        }
                                        

                                        <button type="button" class="btn default grey" onclick="location.href='@Url.Action("Index", "TransferenciaPlacas")';">
                                            Regresar
                                            <i class="fa fa-chevron-circle-left"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-body">
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-2" id="divId">
                                            @Html.LabelFor(model => model.IdTransferencia, htmlAttributes: new { @class = "control-label" })
                                            <div class="input-group">
                                                <p class="form-control-static">
                                                    @Html.EditorFor(model => model.IdTransferencia, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @id = "txtIdTransferencia" } })

                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.FolioTransferencia, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.FolioTransferencia, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @disabled = "disabled", @id = "txtFolioTransferencia" } })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.FechaHoraRegistro, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.FechaHoraRegistro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @disabled = "disabled", @id = "txtFechaHoraRegistro" } })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.IdTransferenciaDatosPersonaEnvio, htmlAttributes: new { @class = "control-label" })
                                            <button type="button" class="btn dark margin-right-10" onclick="AgregarDatosPersona();">
                                                Datos Persona
                                                <i class="fa fa-save"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.IdTransferenciaTransporteEnvio, htmlAttributes: new { @class = "control-label" })
                                            <button type="button" class="btn dark margin-right-10" onclick="AgregarDatosTransporte();">
                                                Datos Transporte
                                                <i class="fa fa-save"></i>
                                            </button>
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.IdDelegacionBancoOrigen, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(x => Model.IdDelegacionBancoOrigen, new SelectList(Model.ListadoDelegacionesUsuarioDDL, "Valor", "Texto", Model.IdDelegacionBancoOrigen),
                                                           htmlAttributes: new { @class = "form-control validaCampoTransferencia", @id = "ddlListadoDelegacionesOrigenDDL", @onchange = "GetTransferenciaPlacasOrigen();" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.IdDelegacionBancoDestino, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(x => Model.IdDelegacionBancoDestino, new SelectList(Model.ListadoDelegacionesDDL, "Valor", "Texto", Model.IdDelegacionBancoDestino),
                                                           htmlAttributes: new { @class = "form-control validaCampoTransferencia", @id = "ddlListadoDelegacionesDestinoDDL", @onchange = "validaDelegaciones();" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row"><br /></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-6">
                    <div class="portlet box blue-hoki">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-edit"></i>Listado 1
                            </div>
                            <div class="actions">
                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                            </div>
                        </div>
                        <div class="portlet-body form form-horizontal">
                            <div class="form-body">
                                <div class="col-md-12">
                                    <div class="row">
                                        <table class="table table-bordered mb-0 table-sm dataTable" id="tablaRegistrosListado1">
                                            <thead>
                                                <tr class="bg-light headerCustom">
                                                    <th>Tipo Placa</th>
                                                    <th>Cant. Disponible Placas (Origen)</th>
                                                    <th>Cant. Disponible a ser Transf.</th>
                                                </tr>
                                            </thead>
                                            <tbody id="listadoPartialTransferenciaListado1">
                                                @Html.Partial("PartialTransferenciaListado1", Model.TransferenciaPlacas_Listado1)
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="row"><br /></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-6">
                    <div class="portlet box blue-hoki">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-edit"></i>Listado 2
                            </div>
                            <div class="actions">
                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                            </div>
                        </div>
                        <div class="portlet-body form form-horizontal">
                            <div class="form-body">
                                <div class="col-md-12">
                                    <div class="row">
                                        <table class="table table-bordered mb-0 table-sm dataTable" id="tablaRegistrosListado2">
                                            <thead>
                                                <tr class="bg-light headerCustom">
                                                    <th>Tipo Placa</th>
                                                    <th>Número de Placa</th>
                                                    <th>Estatus</th>
                                                    <th style="text-align:center">Transferir Placa</th>
                                                </tr>
                                            </thead>
                                            <tbody id="listadoPartialTransferenciaListado2">
                                                @Html.Partial("PartialTransferenciaListado2", Model.TransferenciaPlacas_Listado2)
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="row"><br /></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="modalAgregarDatosPersona" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="tituloModalAgregar">Datos de la persona que se va a llevar las placas </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body portlet-body form form-horizontal">
                    <div class="form-body" style="overflow-y: auto;">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.Nombre, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.Nombre, new { htmlAttributes = new { @class = "form-control validaCamposPersona", @id = "txtDatosPersonaEnvio_Nombre", @autocomplete = "off" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.Apellido, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.Apellido, new { htmlAttributes = new { @class = "form-control validaCamposPersona", @id = "txtDatosPersonaEnvio_Apellido", @autocomplete = "off" } })
                                </div>
                                <div class="col-md-4">

                                    @Html.LabelFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.IdTipoIDs, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(x => Model.TransferenciaPlacas_DatosPersonaEnvio.IdTipoIDs, new SelectList(Model.ListadoTiposIDsDDL, "Valor", "Texto", Model.TransferenciaPlacas_DatosPersonaEnvio.IdTipoIDs),
                                                   htmlAttributes: new { @class = "form-control validaCamposPersona", @id = "ddlDatosPersonaEnvio_TipoID" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.NumeroID, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_DatosPersonaEnvio.NumeroID, new { htmlAttributes = new { @class = "form-control validaCamposPersona", @id = "txtDatosPersonaEnvio_NumeroID", @autocomplete = "off" } })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn green margin-right-10" onclick="ValidaGuardarDatosPersona();">
                        Agregar
                        <i class="fa fa-save"></i>
                    </button>
                    <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="modalAgregarDatosTransporte" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="tituloModalAgregar">Datos del Transporte en el que se van a llevar las Placas </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body portlet-body form form-horizontal">
                    <div class="form-body" style="overflow-y: auto;">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_TransporteEnvio.MarcaVehiculo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_TransporteEnvio.MarcaVehiculo, new { htmlAttributes = new { @class = "form-control", @id = "txtTransporteEnvio_MarcaVehiculo", @autocomplete = "off" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_TransporteEnvio.ModeloVehiculo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_TransporteEnvio.ModeloVehiculo, new { htmlAttributes = new { @class = "form-control", @id = "txtTransporteEnvio_ModeloVehiculo", @autocomplete = "off" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_TransporteEnvio.PlacasVehiculo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_TransporteEnvio.PlacasVehiculo, new { htmlAttributes = new { @class = "form-control", @id = "txtTransporteEnvio_PlacasVehiculo", @autocomplete = "off" } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.TransferenciaPlacas_TransporteEnvio.NumeroEconomico, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TransferenciaPlacas_TransporteEnvio.NumeroEconomico, new { htmlAttributes = new { @class = "form-control", @id = "txtTransporteEnvio_NumeroEconomico", @autocomplete = "off" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn green margin-right-10" onclick="ValidaGuardarDatosTransporte();">
                            Agregar
                            <i class="fa fa-save"></i>
                        </button>
                        <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts
{
    <script src="~/Content/js/datatables.js"></script>
    <script src="~/Content/js/datatables.min.js"></script>
    <script src="~/Content/js/datatables.bootstrap.js"></script>
    <script src="~/Content/js/funciones-alertas.js"></script>
    <script src="~/Scripts/Transferencias/Transferencias.js"></script>
    <script>
        $(document).ready(function () {
            setTimeout(function () { CargaInformacionTransferencia(); }, 300);
        });

    </script>
}
